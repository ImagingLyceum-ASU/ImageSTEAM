{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Test Catch Cell Order","provenance":[],"authorship_tag":"ABX9TyObkHVfuCjEI2vL7zUmd9+S"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"8wD2t-dv7GnQ","executionInfo":{"status":"ok","timestamp":1613077368526,"user_tz":420,"elapsed":694,"user":{"displayName":"Michael Li","photoUrl":"","userId":"16803643686007598062"}}},"source":["executed_cells = {}\r\n","\r\n","def check_cell(num):\r\n","    if len(executed_cells) < num :\r\n","      print('It looks like you tried to run cell ' + str(num) + ', but you should run them in order! Make sure you ran all previous cells at least once.')\r\n","      raise\r\n","    elif str(num) not in executed_cells.keys():\r\n","      executed_cells[str(num)] = num\r\n","\r\n"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"NMM9y_td8etT","executionInfo":{"status":"ok","timestamp":1612994235921,"user_tz":420,"elapsed":345,"user":{"displayName":"Michael Li","photoUrl":"","userId":"16803643686007598062"}}},"source":["check_cell(0)"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"F3NabMXm8qEd","executionInfo":{"status":"error","timestamp":1613077374518,"user_tz":420,"elapsed":582,"user":{"displayName":"Michael Li","photoUrl":"","userId":"16803643686007598062"}},"outputId":"f89bb45e-dee2-4548-c805-83801c812d10"},"source":["check_cell(1)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["It looks like you tried to run cell 1, but you should run them in order! Make sure you ran all previous cells at least once.\n"],"name":"stdout"},{"output_type":"error","ename":"RuntimeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRuntimeError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-a0f8c2128d6c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcheck_cell\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-1-31ab18bfebcb>\u001b[0m in \u001b[0;36mcheck_cell\u001b[0;34m(num)\u001b[0m\n\u001b[1;32m      4\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mexecuted_cells\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0mnum\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m       \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'It looks like you tried to run cell '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m', but you should run them in order! Make sure you ran all previous cells at least once.'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 6\u001b[0;31m       \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      7\u001b[0m     \u001b[0;32melif\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mexecuted_cells\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeys\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      8\u001b[0m       \u001b[0mexecuted_cells\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnum\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mRuntimeError\u001b[0m: No active exception to reraise"]}]},{"cell_type":"markdown","metadata":{"id":"h8GyzHEZ9ByQ"},"source":["## Download Example Image"]},{"cell_type":"code","metadata":{"id":"UUkwRR6A9CKF"},"source":["check_cell(10)"],"execution_count":null,"outputs":[]}]}